variables:
  # Cannot use key:value syntax in root defined variables
  - name: _TeamName
    value: DotNetCore
  - name: _PublishUsingPipelines
    value: true
  - name: _DotNetArtifactsCategory
    value: .NETCore
  - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:
    - group: SDL_Settings

# CI and PR triggers
trigger:
  batch: true
  branches:
    include:
    - main
    - production
pr:
- main
- production

stages:
- stage: build
  dependsOn: []
  displayName: Build
  jobs:
  - template: /eng/common/templates/jobs/jobs.yml
    parameters:
      enableMicrobuild: false
      enablePublishBuildArtifacts: true
      enablePublishTestResults: false
      enablePublishBuildAssets: false
      enablePublishUsingPipelines: ${{ variables._PublishUsingPipelines }}
      enableTelemetry: true
      jobs:
      - job: Windows_NT
        timeoutInMinutes: 90
        pool:
          ${{ if eq(variables['System.TeamProject'], 'internal')}}:
            name: NetCore1ESPool-Internal
            demands: ImageOverride -equals 1es-windows-2019
          ${{ if eq(variables['System.TeamProject'], 'public')}}:
            name: NetCore-Public          
            demands: ImageOverride -equals 1es-windows-2019-open

        steps:
        - checkout: self
          clean: true

        - task: UseDotNet@2
          displayName: Install Correct .NET Version
          inputs:
            useGlobalJson: true

        - task: UseDotNet@2
          displayName: Install .NET Version 3.1
          inputs:
            version: 3.1.x

        - task: NuGetToolInstaller@0
          inputs:
            versionSpec: 6.1.x

        - task: NuGetCommand@2
          displayName: Restore Packages
          inputs:
            command: restore
            solution: "**/*.sln"
            feedstoUse: config

        - task: AzureCLI@2
          displayName: Verify Secret Usages
          inputs:
            azureSubscription: DotNet Eng Services Secret Manager
            scriptType: ps
            scriptLocation: inlineScript
            inlineScript: |
              Get-ChildItem .vault-config/*.yaml |% { dotnet run --project src/SecretManager/Microsoft.DncEng.SecretManager -- synchronize --verify-only $_}

        - ${{ if and(ne(variables['System.TeamProject'], 'public'), notin(variables['Build.Reason'], 'PullRequest')) }}:

          - powershell: src\Monitoring\ComponentGovernance\generate-cgmanifest.ps1
            displayName: Generate cgmanifest.json for Grafana

          - task: ComponentGovernanceComponentDetection@0
            condition: succeededOrFailed()
            inputs:
              # `.packages` directory is used by some tools running during build.
              # By default ComponentDetection scans this directory and sometimes reports
              # vulnerabilities for packages that are not part of the published product.
              # We can ignore this directory because actual vulnerabilities
              # that we are interested in will be found by the tool
              # when scanning .csproj and package.json files.
              ignoreDirectories: '.packages'
